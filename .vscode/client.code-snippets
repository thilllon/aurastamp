{
  "nextjs_component": {
    "scope": "javascriptreact,typescriptreact",
    "prefix": "cccccccccccccccccccccccccccccccc",
    "body": [
      "import React, { ReactNode, useState, useEffect, useContext } from 'react';",
      "import { css, SerializedStyles } from '@emotion/react';",
      "import { Box, Typography, Container } from '@mui/material';",
      "import { useRouter } from 'next/router';",
      "import { Link } from '@/components/shared/Link';",
      "import Image from 'next/image';",
      "",
      "interface ${TM_FILENAME_BASE}Props{",
      "  cssProps?: SerializedStyles;",
      "}",
      "",
      "export const ${TM_FILENAME_BASE} = ({}:${TM_FILENAME_BASE}Props) => {",
      "const router = useRouter();",
      "$1",
      // "//",
      // "//",
      "return <Box>$2</Box>;",
      "}"
    ]
  },
  "nextjs_default_page": {
    "description": "넥스트 페이지 기본 시작",
    "scope": "javascriptreact,typescriptreact",
    "prefix": "pppppppppppppppppppppppppppppppp",
    "body": [
      "import React, { ReactNode, useState, useEffect, useContext } from 'react';",
      "import { css, SerializedStyles } from '@emotion/react';",
      "import { Box, Typography, Container } from '@mui/material';",
      "import { useRouter } from 'next/router';",
      "import { Link } from '@/components/shared/Link';",
      "import Image from 'next/image';",
      "import { GetServerSideProps, GetStaticPaths, GetStaticProps } from 'next';",
      "import { ParsedUrlQuery } from 'querystring';",
      "import { frncc } from '@/utils/styles';",
      "",
      "interface ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}PageProps {}",
      "",
      "export default function ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}Page({}: ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}PageProps) {",
      "  const router = useRouter();",
      "  $2",
      "  return ( ",
      "    <Container",
      "      css={css`",
      "        \\${frncc};",
      "        min-height: 100vh;",
      "      `}",
      "    >",
      "      <Typography variant='h4'>{'${TM_FILENAME_BASE}(TBD)'}</Typography>",
      "     </Container>",
      "  );",
      "}",
      "",
      "// export const getServerSideProps: GetServerSideProps<${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}PageProps> = async ({ req, res }) => {",
      "//  return { props: {} };",
      "// };",
      "",
      "// type Paths = (",
      "//   | string",
      "//   | {",
      "//       params: ParsedUrlQuery;",
      "//       locale?: string | undefined;",
      "//     }",
      "// )[];",
      "",
      "// export const getStaticPaths: GetStaticPaths = async () => {",
      "//   const paths: Paths = [];",
      "//   return { paths, fallback: false };",
      "// };",
      "",
      "// export const getStaticProps: GetStaticProps<${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}PageProps> = async () => {",
      "//   return { props: {} };",
      "// };",
      ""
    ]
  },
  "cssProps": {
    "description": "CSS props",
    "scope": "javascriptreact,typescriptreact",
    "prefix": "cssssssssssssssssssssssssssssssss",
    "body": ["css={css`${1}`}"]
  },
  "TypographyWithVariant": {
    "description": "Typography",
    "scope": "javascriptreact,typescriptreact",
    "prefix": "tttttttttttttttt",
    "body": ["<Typography variant='$2'>{$1}</Typography>"]
  },
  "Typography": {
    "description": "Typography",
    "scope": "javascriptreact,typescriptreact",
    "prefix": "tytytytytytytyty",
    "body": ["<Typography>{$1}</Typography>"]
  },
  "2px_solid_blue": {
    "description": "draw borders to check visually faster",
    "scope": "javascriptreact,typescriptreact",
    "prefix": "2sb",
    "body": ["border: 2px solid blue;"]
  }
}
